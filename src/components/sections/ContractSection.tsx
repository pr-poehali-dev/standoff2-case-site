import { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

interface Item {
  id: number;
  name: string;
  rarity: string;
  color: string;
  value: number;
}

const ContractSection = () => {
  const [selectedItems, setSelectedItems] = useState<Item[]>([]);
  
  const inventory: Item[] = [
    { id: 1, name: 'Glock-18 | –ù–æ—á–Ω–æ–π —Å—Ç—Ä–∞–∂', rarity: '–û–±—ã—á–Ω—ã–π', color: '#6B7280', value: 180 },
    { id: 2, name: 'USP-S | –õ–µ—Å–Ω–æ–π –∫–∞–º—É—Ñ–ª—è–∂', rarity: '–û–±—ã—á–Ω—ã–π', color: '#6B7280', value: 150 },
    { id: 3, name: 'P90 | –ü–µ—Å—á–∞–Ω–∞—è –±—É—Ä—è', rarity: '–û–±—ã—á–Ω—ã–π', color: '#6B7280', value: 200 },
    { id: 4, name: 'M4A4 | –ì–æ—Ä–æ–¥—Å–∫–æ–π –∫–∞–º—É—Ñ–ª—è–∂', rarity: '–û–±—ã—á–Ω—ã–π', color: '#6B7280', value: 220 },
    { id: 5, name: 'AK-47 | –°–∞—Ñ–∞—Ä–∏', rarity: '–û–±—ã—á–Ω—ã–π', color: '#6B7280', value: 250 },
    { id: 6, name: 'Desert Eagle | –ú–µ—Ç–µ–ª—å', rarity: '–†–µ–¥–∫–∏–π', color: '#EAB308', value: 640 },
    { id: 7, name: 'AWP | –ü—É—Å—Ç—ã–Ω–Ω—ã–π –∫–∞–º—É—Ñ–ª—è–∂', rarity: '–†–µ–¥–∫–∏–π', color: '#EAB308', value: 720 },
    { id: 8, name: 'M4A1-S | –ì–∏–ø–Ω–æ—Ç–∏–∫', rarity: '–†–µ–¥–∫–∏–π', color: '#EAB308', value: 580 }
  ];

  const toggleItem = (item: Item) => {
    if (selectedItems.find(i => i.id === item.id)) {
      setSelectedItems(selectedItems.filter(i => i.id !== item.id));
    } else if (selectedItems.length < 10) {
      setSelectedItems([...selectedItems, item]);
    }
  };

  const totalValue = selectedItems.reduce((sum, item) => sum + item.value, 0);
  const canCraft = selectedItems.length >= 3;

  const getPotentialReward = () => {
    if (selectedItems.length < 3) return null;
    const avgValue = totalValue / selectedItems.length;
    const multiplier = 1.2 + (selectedItems.length * 0.1);
    return Math.round(avgValue * multiplier);
  };

  const handleCraft = () => {
    if (!canCraft) return;
    const reward = getPotentialReward();
    alert(`üéâ –ö–æ–Ω—Ç—Ä–∞–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω! –í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å—é ${reward}‚ÇΩ`);
    setSelectedItems([]);
  };

  return (
    <div className="max-w-6xl mx-auto space-y-8 animate-fade-in">
      <div className="text-center">
        <h2 className="font-heading text-4xl md:text-5xl font-bold mb-4">–ö–æ–Ω—Ç—Ä–∞–∫—Ç –æ–±–º–µ–Ω–∞</h2>
        <p className="text-muted-foreground text-lg">
          –û–±–º–µ–Ω—è–π –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ –æ–¥–∏–Ω –±–æ–ª–µ–µ —Ü–µ–Ω–Ω—ã–π
        </p>
      </div>

      <div className="grid lg:grid-cols-2 gap-6">
        <div className="space-y-4">
          <h3 className="font-heading text-2xl font-bold">–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å</h3>
          <Card className="p-6 bg-card/50 backdrop-blur max-h-[600px] overflow-y-auto">
            <div className="space-y-2">
              {inventory.map((item) => {
                const isSelected = selectedItems.find(i => i.id === item.id);
                return (
                  <Card
                    key={item.id}
                    onClick={() => toggleItem(item)}
                    className={`p-4 cursor-pointer transition-all hover-scale ${
                      isSelected
                        ? 'bg-primary/20 border-primary'
                        : 'bg-muted/30'
                    }`}
                  >
                    <div className="flex items-center justify-between">
                      <div>
                        <div className="font-semibold" style={{ color: item.color }}>
                          {item.name}
                        </div>
                        <Badge
                          variant="outline"
                          className="mt-1"
                          style={{ borderColor: item.color, color: item.color }}
                        >
                          {item.rarity}
                        </Badge>
                      </div>
                      <div className="text-right">
                        <div className="font-bold">{item.value}‚ÇΩ</div>
                        {isSelected && (
                          <Icon name="Check" size={20} className="text-primary ml-auto" />
                        )}
                      </div>
                    </div>
                  </Card>
                );
              })}
            </div>
          </Card>
        </div>

        <div className="space-y-4">
          <h3 className="font-heading text-2xl font-bold">
            –ö–æ–Ω—Ç—Ä–∞–∫—Ç ({selectedItems.length}/10)
          </h3>
          <Card className="p-6 bg-gradient-to-br from-primary/20 via-card to-card min-h-[300px]">
            {selectedItems.length === 0 ? (
              <div className="flex flex-col items-center justify-center h-full text-center py-12">
                <Icon name="Package" size={64} className="text-muted-foreground mb-4" />
                <p className="text-muted-foreground">
                  –í—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω–∏–º—É–º 3 –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è –æ–±–º–µ–Ω–∞
                </p>
              </div>
            ) : (
              <div className="space-y-4">
                <div className="grid grid-cols-5 gap-2">
                  {[...Array(10)].map((_, index) => (
                    <div
                      key={index}
                      className={`aspect-square rounded-lg border-2 border-dashed flex items-center justify-center ${
                        selectedItems[index]
                          ? 'bg-primary/20 border-primary'
                          : 'bg-muted/20 border-muted'
                      }`}
                    >
                      {selectedItems[index] ? (
                        <div className="text-2xl">‚úì</div>
                      ) : (
                        <div className="text-2xl text-muted-foreground">?</div>
                      )}
                    </div>
                  ))}
                </div>

                <div className="space-y-3 pt-4 border-t border-border">
                  <div className="flex justify-between">
                    <span className="text-muted-foreground">–ü—Ä–µ–¥–º–µ—Ç–æ–≤:</span>
                    <span className="font-bold">{selectedItems.length}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-muted-foreground">–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                    <span className="font-bold">{totalValue}‚ÇΩ</span>
                  </div>
                  {getPotentialReward() && (
                    <>
                      <div className="flex justify-between text-primary">
                        <span>–í–æ–∑–º–æ–∂–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞:</span>
                        <span className="font-bold">~{getPotentialReward()}‚ÇΩ</span>
                      </div>
                      <div className="text-xs text-muted-foreground text-center pt-2">
                        üí° –ë–æ–ª—å—à–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ = –≤—ã—à–µ —à–∞–Ω—Å –Ω–∞ —Ä–µ–¥–∫–∏–π –¥—Ä–æ–ø
                      </div>
                    </>
                  )}
                </div>

                <Button
                  onClick={handleCraft}
                  disabled={!canCraft}
                  className="w-full bg-primary hover:bg-primary/90 disabled:opacity-50"
                  size="lg"
                >
                  <Icon name="Sparkles" className="mr-2" size={20} />
                  –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç
                </Button>
              </div>
            )}
          </Card>

          <Card className="p-4 bg-muted/50">
            <h4 className="font-semibold mb-2 flex items-center gap-2">
              <Icon name="Info" size={18} className="text-primary" />
              –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç?
            </h4>
            <ul className="text-sm text-muted-foreground space-y-1">
              <li>‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç 3 –¥–æ 10 –ø—Ä–µ–¥–º–µ—Ç–æ–≤</li>
              <li>‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –≤—ã—à–µ —Ä–∞–Ω–≥–æ–º</li>
              <li>‚Ä¢ –ß–µ–º –±–æ–ª—å—à–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤, —Ç–µ–º –≤—ã—à–µ —à–∞–Ω—Å</li>
              <li>‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞–≥—Ä–∞–¥—ã –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–ª–æ–∂–µ–Ω–∏–π</li>
            </ul>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default ContractSection;
